{
  "version": 3,
  "sources": ["src/spellbook/helpers.ts", "src/lib/parsers.js", "src/shortcodes.js"],
  "sourcesContent": ["/**\n * Shallow merges two objects together. Used to pass simple options to functions.\n * \n * @param {object} target The target object to merge into\n * @param {object} source The source object to merge from\n * @example\n * const target = { foo: 'bar' }\n * const source = { bar: 'baz' }\n * shallowMerge(target, source) // { foo: 'bar', bar: 'baz' }\n */\nfunction shallowMerge(target: any, source: any) {\n  for (const key in source) {\n    target[key] = source[key]\n  }\n}\n\nfunction _cloneObject(o: object) {\n  let res = {}\n  for (const i in o) {\n    res[i] = clone(o[i])\n  }\n  return res\n}\n\nfunction _cloneArray(a: Array<any>) {\n  let res: Array<any> = []\n  for(var i = 0; i < a.length; i++) {\n    res[i] = clone(a[i])\n  }\n  return res\n}\n\n/**\n * Deep clone function that's mindful of arrays and objects\n * \n * @param {object} o The object to clone\n * @example\n * const obj = { foo: 'bar' }\n * const clone = clone(obj)\n * clone.foo = 'baz'\n * console.log(obj.foo) // 'bar'\n * console.log(clone.foo) // 'baz'\n * @todo Check if faster than assign. This function is pretty old...\n */ \nfunction clone(o: any) {\n  let res: any = null\n  if(Array.isArray(o)) {\n    res = _cloneArray(o)\n  } else if(typeof o === 'object' && o !== null) {\n    res = _cloneObject(o)\n  } else {\n    res = o;\n  }\n  return res;\n}\n\n/**\n * Detaches an element from the DOM and returns it\n * \n * @param {HTMLElement} element The element to detach\n */\nfunction detachElement(element: HTMLElement) {\n  if (element && element.parentNode) {\n    element.parentNode.removeChild(element);\n  }\n  return element\n}\n\n/**\n * Inserts an element before another element\n * \n * @param {HTMLElement} targetElement The element to insert before\n * @param {HTMLElement} newElement The element to insert\n * @example\n * const target = document.getElementById('target')\n * const newElement = document.createElement('div')\n * newElement.id = 'newElement'\n * insertBeforeElement(target, newElement)\n * // <div id=\"newElement\"></div>\n * // <div id=\"target\"></div>\n */\nfunction insertBeforeElement(targetElement: HTMLElement, newElement: HTMLElement) {\n  targetElement.parentNode?.insertBefore(newElement, targetElement);\n}\n\n/**\n * Removes all elements matching a selector from the DOM\n * \n * @param {string} selector The selector to select elements to remove\n */\nfunction removeAll(selector: string) {\n  for (const element of document.querySelectorAll(selector)) {\n    element.remove();\n  }\n}\n\nexport function getHTML(element: HTMLElement) {\n  return element.innerHTML\n}\n\nexport function isElementEmpty(element: HTMLElement) {\n  return getHTML(element).trim() === ''\n}\n\nexport function isFunction(o: any) {\n  return o && typeof o === 'function'\n}\n\nexport function decodeHTML(html: string) {\n  const txt = document.createElement('textarea')\n  txt.innerHTML = html\n  const res = txt.value\n  txt.remove()\n  return res\n}\n\nexport function propertyIsFunction(o: any, property: string) {\n  return o.hasOwnProperty(property) && isFunction(o[property])\n}\n\nexport function transformDashToCamelCase(str: string) {\n  return str.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase() });\n}\n\nexport function css(element: HTMLElement, styles: object, transform = false) {\n  for (let property in styles) {\n    if (transform) property = transformDashToCamelCase(property)\n    element.style[property] = styles[property]\n  }\n}\n\nexport { clone, shallowMerge, detachElement, insertBeforeElement, removeAll }\n", "/**\n * Parse a string of attributes and return an object\n * \n * @param {string} string - The string to parse\n * @returns {object} - The parsed attributes \n * @example\n * parseAttributes('button text=\"Click me\" data='{\"key\": \\\"value\"}' class=\"btn btn-primary\"')\n * // => { button: null, text: 'Click me', data: '{\"key\": \"value\"}', class: 'btn btn-primary' }\n */\nexport function parseAttributes(str) {\n\tconst re = /\\s*(?:([a-z_]{1}[a-z0-9\\-_]*)=?(?:\"([^\"]+)\"|'([^']+)')*)\\s*/gi\n\tconst reWithoutValue = /^\\s*([a-z_]{1}[a-z0-9\\-_]*)\\s*$/i\n\tconst reHasValue = /^\\s*([a-z_]{1}[a-z0-9\\-_]*)=(\"[^\"]+\"|'[^']+')\\s*$/i\n\tconst reReplaceFirstAndLastQuote = /^[\"']|[\"']$/g\n\t\n\tconst res = {}\n\tconst match = str.match(re)\n\n\tfor (let i = 0; i < match.length; i++) {\n\t\tconst m = match[i]\n\t\tif (m === '') continue\n\n\t\tif (reWithoutValue.test(m)) {\n\t\t\tconst [, key] = m.match(reWithoutValue)\n\t\t\tres[key] = null\n\t\t\treWithoutValue.lastIndex = 0\n\t\t} else if (reHasValue.test(m)) {\n\t\t\tconst [, key, value] = m.match(reHasValue)\n\t\t\tres[key] = value.replace(reReplaceFirstAndLastQuote, '')\n\t\t\treReplaceFirstAndLastQuote.lastIndex = 0\n\t\t\treHasValue.lastIndex = 0\n\t\t}\n\t}\n\n\treturn res\n}\n\n/**\n * Get the shortcode content from a string if shortcode is present\n * \n * @param {string} string - The string to parse\n * @returns {string} - The shortcode content\n * @example\n * getShortcodeContent('[shortcode foo=\"bar\"]')\n * // => 'shortcode foo=\"bar\"'\n */\nexport function getShortcodeContent(str) {\n\tconst re = /\\[([^\\[\\]]+)\\]/i\n\tconst match = str.match(re)\n\treturn match ? match[1] : null\n}\n\n/**\n * Check if it is a specific closing tag from provided shortcode content (meaning without the brackets)\n * \n * @param {string} string - The string to parse, shortcode content without the brackets\n * @param {string} tag - The shortcode tag to check\n * @returns {boolean} - True if it is a specific closing tag, false otherwise\n * @example\n * const shortcodeTagContent = getShortcodeContent('[/  shortcode ]')\n * isSpecificClosingTag(shortcodeTagContent, 'shortcode')\n * // => true\n */\nexport function isSpecificClosingTag(str, tag) {\n\tconst re = new RegExp(`^\\\\/\\\\s*${tag}\\\\s*$`, 'i')\n\treturn re.test(str)\n}\n\n/**\n * Get the shortcode name from shortcode content\n * \n * @param {string} string - The string to parse, shortcode content without the brackets\n * @returns {string} - The shortcode name\n * @example\n * const testShortcodeTagContent = getShortcodeContent('[shortcode foo=\"bar\"]')\n * getShortcodeName(testShortcodeTagContent)\n * // => 'shortcode'\n */\nexport function getShortcodeName(str) {\n\tconst re = /^\\s*([a-z_]{1}[a-z0-9\\-_]*)\\s*/i\n\tconst match = str.match(re)\n\treturn match ? match[1] : null\n}\n", "import { clone, shallowMerge, removeAll, insertBeforeElement, propertyIsFunction, css, isElementEmpty, decodeHTML } from './spellbook/helpers';\nimport { parseAttributes, getShortcodeContent, isSpecificClosingTag, getShortcodeName } from './lib/parsers';\n\n//TODO: THIS SHIT NEEDS A HEAVY REWRITE!!! YOU LAZY ASS!\n\n//TODO: decide if jQuery is really necessary\n\nclass Shortcodes {\n\tconstructor(options) {\n\t\tthis.descriptor_index = {};\n\t\tthis.exec_fns = {};\n\t\n\t\tthis.shopify_img_re = /^([a-z\\.:\\/]+\\.shopify\\.[a-z0-9\\/_\\-]+)(_[0-9]+x[0-9]*)(\\.[a-z]{3,4}.*)$/gi\n\t\tthis.shopify_img_replacer_re = /^([a-z\\.:\\/]+\\.shopify\\.[a-z0-9\\/_\\-]+)(\\.[a-z]{3,4}.*)$/gi\n\t\t\n\t\tthis.options = {\n\t\t\ttemplate_class: 'template',\n\t\t\tself_anchor_class: 'self-anchor',\n\t\t\tplacement_class_prefix: 'shortcode-landing'\n\t\t}\n\t\n\t\tif (options) {\n\t\t\tshallowMerge(this.options, options)\n\t\t}\n\t}\n\n\t/**\n\t * Shopify image link image size changer\n\t * \n\t * @param {string} src \n\t * @param {number} width \n\t * @returns string\n\t */\n\tshopifyImageLink(src, width) {\n\t\tconst pref = '$1'\n\t\tlet suf = '$2'\n\t\tif (!width) width = 100\n\t\tlet re = this.shopify_img_replacer_re\n\n\t\tif (!re.test(src)) return src\n\n\t\tif (this.shopify_img_re.test(src)) {\n\t\t\tsuf = '$3'\n\t\t\tre = this.shopify_img_re\n\t\t}\n\n\t\tconst replacement = `${pref}_${width}x${suf}`\n\t\treturn src.replace(re, replacement)\n\t}\n\n\t/**\n\t * Creates a self anchor element used for inserting shortcode in the DOM tree where it was found\n\t * \n\t * @param {HTMLElement} elem - Element to insert the anchor before\n\t * @param {string} custom_anchor_class - Custom class to add to the anchor if provided\n\t * @param {string} shortcode_name - Name of the shortcode, adds the shortcode-{shortcode_name} class to the anchor if provided\n\t * @param {number} counter - Counter of the shortcode, adds the sc{counter} class to the anchor if provided\n\t */\n\tcreateSelfAnchor(elem, custom_anchor_class, shortcode_name, counter) {\n\t\tconst self_anchor = document.createElement('div')\n\t\tconst classes = []\n\t\tif (custom_anchor_class) classes.push(custom_anchor_class)\n\t\tif (shortcode_name) classes.push(`shortcode-${shortcode_name}`)\n\t\tif (counter) classes.push(`${shortcode_name}-sc-${counter}`)\n\t\tself_anchor.className = classes.join(' ')\n\t\tinsertBeforeElement(elem, self_anchor)\n\n\t\treturn self_anchor\n\t}\n\n\t/**\n\t * Finds elements between the shortcodes makes a map of all shortcodes and their containing elements\n\t * \n\t * @param {HTMLElement} elem - Entry element to parse and find shortcodes in\n\t * @param {object} register - Object containing all registered shortcodes, used to check if the shortcode is registered\n\t * @param {string} self_anchor_class - Class to add to the self anchor element\n\t */\n\titerateNode(elem, register, self_anchor_class) {\n\t\tconst map = {}\n\t\tconst children = elem.children\n\t\tlet last_shortcode = null\n\t\tlet shortcode_counter = 0\n\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst child = children[i]\n\t\t\tlet match = null\n\t\t\t\n\t\t\t// check all elements for shortcodes except \"pre\" elements\n\t\t\tif (!(child instanceof HTMLPreElement || child.querySelector('pre'))) { //only if it's not \"pre\" element\n\t\t\t\tconst text = htmlDecode(child.textContent.trim())\n\t\t\t\tmatch = getShortcodeContent(text)\n\n\t\t\t\t// if the shortcode is not registered, treat it as a regular text\n\t\t\t\tif (match && !register.hasOwnProperty(getShortcodeName(match))) {\n\t\t\t\t\tmatch = null\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// when the shortcode tag is detected\n\t\t\tif (match) {\n\t\t\t\t// detect closing tag and remove it\n\t\t\t\tif (last_shortcode && isSpecificClosingTag(match, last_shortcode.name)) {\n\t\t\t\t\tlast_shortcode = null\n\t\t\t\t\tchild.remove()\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\tlast_shortcode = new Shortcode(match, clone(register[getShortcodeName(match)]), shortcode_counter)\n\t\t\t\tconst self_anchor = this.createSelfAnchor(child, self_anchor_class, last_shortcode.name, shortcode_counter)\n\n\t\t\t\tif (!map.hasOwnProperty(last_shortcode.uid)) {\n\t\t\t\t\tmap[last_shortcode.uid] = last_shortcode\n\t\t\t\t\tshortcode_counter++\n\t\t\t\t}\n\n\t\t\t\tmap[last_shortcode.uid].content.push(self_anchor)\n\t\t\t\tchild.remove()\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tif (last_shortcode.uid) {\n\t\t\t\tmap[last_shortcode.uid].content.push(child)\n\t\t\t}\n\t\t}\n\n\t\treturn map\n\t}\n}\n\n//if this isn't a God function I don't know what is... Wait, I know, it's a piece of terrible nonrefactored code!\n//FUCK ME.\nShortcodes.prototype.sortDOM = function(shortcode_obj) {\n\tconst descriptor = shortcode_obj.descriptor\n\tconst content = shortcode_obj.content\n\t\n\tconst reSubtag = /^\\s*\\{\\s*([a-z0-9\\-_\\s]+)\\s*\\}\\s*$/gi; //subtag attributes. I guess subtags are used for item (\"slide\") delimiters\n\n\tconst item_tags = [] //collects attributes per \"slide\"\n\tconst elements = {} //sorted DOM per tag name\n\tconst other_than_rest = {}\n\tlet other_than_rest_count = 0\n\tlet first_element_key = null\n\tlet last_element_key = null\n\tlet max_element_key = null\n\n\tlet cycle_counter = 0\n\tlet subtag_first_flag = false\n\n\t//cycles are used for packaging the rest of elements in arrays\n\tfunction newCycle() {\n\t\tfillTheGaps()\n\t\tcycle_counter += 1\n\t}\n\n\t//rest has to be always present, it is a default collection of all undefined elements\n\telements.rest = []\n\n\tconst memo_block_template = {} //this will hold all the tag names from elements and remove the ones found, so we can generate empty states for the not found ones\n\tlet memo_block = {}\n\n\t// fill the gaps in the memo block with nulls. This is needed for the repeater. If the repeater is not filled with elements, it will not be processed?\n\tfunction fillTheGaps() {\n\t\tfor (const k in memo_block) {\n\t\t\telements[k].push(null)\n\t\t}\n\t\tmemo_block = newMemoBlock()\n\t}\n\n\t//clone temp memo_block\n\t// Memo block is used to check if all the elements are found. If not, the cycle is reset and the rest of the elements are packaged in arrays? (by copilot)\n\tfunction newMemoBlock() {\n\t\tres = {};\n\t\tfor (const k in memo_block_template) {\n\t\t\tres[k] = true\n\t\t}\n\t\treturn res\n\t}\n\n\t//extract other than rest\n\tif (descriptor.hasOwnProperty('elements')) {\n\t\tfor (const k in descriptor.elements) {\n\t\t\tif (k !== 'rest') {\n\t\t\t\tlast_element_key = k\n\t\t\t\tif (!elements.hasOwnProperty(k)) elements[k] = []\n\n\t\t\t\tif (first_element_key === null) first_element_key = k\n\n\t\t\t\tif (!other_than_rest.hasOwnProperty(k)) {\n\t\t\t\t\tother_than_rest[k] = true\n\t\t\t\t\tother_than_rest_count++\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmemo_block_template[k] = true\n\t\t\tmemo_block[k] = true\n\t\t}\n\t}\n\n\tfor (let i = 0; i < content.length; i++) {\n\t\tlet item = content[i]\n\n\t\t//\u2757\uFE0FTODO: THIS CAN BE DONE IN THE SHORTCODE CLASS DURING CONSTRUCTION\n\t\tif (item.classList.contains(this.options.self_anchor_class)) {\n\t\t\tif (descriptor.anchor === 'self') descriptor.anchor = item\n\t\t\tcontinue\n\t\t}\n\n\t\t//if the contents are empty, with exclusion of images\n\t\tif (!item.matches('img') && isElementEmpty(item)) continue\n\n\t\tlet green_flag = false // \u2B07\uD83C\uDDF8\uD83C\uDDE6 if true, the iteration is over? (copilot said this not me) \n\n\t\t//check for subtags - they are used as item (\"slide\") delimiters\n\t\tif (descriptor.hasOwnProperty('item_template')) {\n\t\t\tvar text = item.textContent.trim()\n\t\t\tvar match = reSubtag.exec(text)\n\t\t\treSubtag.lastIndex = 0\n\n\t\t\tif (match && match.length > 1) {\n\t\t\t\tif (cycle_counter || subtag_first_flag) {\n\t\t\t\t\tnewCycle()\n\t\t\t\t}\n\n\t\t\t\titem_tags[cycle_counter] = match[1]\n\t\t\t\tsubtag_first_flag = true\n\t\t\t\tcontinue\n\t\t\t}\n\t\t}\n\n\t\t//iterating found elements, sort defined\n\t\tif (other_than_rest_count) {\n\t\t\tfor (const k in other_than_rest) {\n\n\t\t\t\tif (elements[k].length === descriptor.elements[k].count) { //if the count of elements reatches set count skip iteration\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t//\u2757\uFE0FXXX: this is a temporary and very bad solution | this was written to be able to use images inside the ul/li as secondary images //XXX: WHAT IS THE USE CASE???\n\t\t\t\tif (k === 'img' && item.querySelectorAll('li').length) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\tconst inner = item.querySelector(k) //gotta cover all the possible cases of undefined generated html\n\n\t\t\t\tif (item.matches(k) || inner) { //if element is found\n\t\t\t\t\tif (inner) item = inner\n\n\t\t\t\t\t// if an element is found that belongs to a memo block but it's already processed - this means a new cycle must begin\n\t\t\t\t\t// \uD83D\uDC46\uD83C\uDFFB WHAT THE FUCK?!?!?!\n\t\t\t\t\tif (descriptor.hasOwnProperty('item_template') && !memo_block.hasOwnProperty(k)) {\n\t\t\t\t\t\tnewCycle()\n\t\t\t\t\t}\n\n\t\t\t\t\telements[k].push(item)\n\n\t\t\t\t\tif (descriptor.hasOwnProperty('item_template')) {\n\t\t\t\t\t\tdelete memo_block[k]\n\t\t\t\t\t}\n\n\t\t\t\t\tgreen_flag = true // \u2B06\uD83C\uDDF8\uD83C\uDDE6 don't iterate the rest\n\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//iterating found elements, sort undefined = rest\n\t\tif (!green_flag) {\n\t\t\t//collecting other elements\n\t\t\tif (descriptor.hasOwnProperty('item_template')) { //if it is a repeater\n\t\t\t\tif (!elements.rest[cycle_counter]) {\n\t\t\t\t\tdelete memo_block['rest']\n\t\t\t\t\telements.rest[cycle_counter] = []\n\t\t\t\t}\n\t\t\t\telements.rest[cycle_counter].push(item)\n\t\t\t} else {\n\t\t\t\telements.rest.push(item)\n\t\t\t}\n\t\t}\n\t}\n\n\tif (descriptor.hasOwnProperty('item_template')) {\n\t\tfillTheGaps()\n\t}\n\n\n\t// calculate which element has the most entries = number of slides\n\t// this will be used as a slide delimiter later on\n\tlet max_count = null;\n\n\tfor (const k in other_than_rest) {\n\t\tvar c = elements[k].length\n\n\t\tif (max_element_key === null) {\n\t\t\tmax_element_key = k\n\t\t\tmax_count = c\n\t\t} else {\n\t\t\tif (c > max_count) {\n\t\t\t\tmax_element_key = k\n\t\t\t\tmax_count = c\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\telements: elements,\n\t\t\t\titem_tags: item_tags,\n\t\t\t\tfirst_element_key: first_element_key,\n\t\t\t\tlast_element_key: last_element_key,\n\t\t\t\tmax_element_key: max_element_key\n\t}\n}\n\n//TODO: simplify with declarative programming\nShortcodes.prototype.executeProperties = function($item, $dest, props, descriptor, num) {\n\t//$item = $($item);\n\t// Extract DOM attributes\n\tif (props.extract_fn === 'attr') {\n\t\tif (typeof props.extract_attr === 'string') {\n\t\t\textract = $item[props.extract_fn](props.extract_attr);\n\n\t\t\tif ($item.is('img') && props.extract_attr === 'src') {\n\t\t\t\tif (extract && this.shopify_img_re.test(extract)) {\n\t\t\t\t\textract = extract.replace(this.shopify_img_re, '$1$3');\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // if it has multiple attributes to extract, like alt image -> for binding use custom function\n\t\t\textract = [];\n\t\t\tfor (var j = 0; j < props.extract_attr.length; j++) {\n\t\t\t\tif (props.extract_attr[j] === 'html') {\n\t\t\t\t\textract.push($item.html());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ($item.is('img') && props.extract_attr[j] === 'src') {\n\t\t\t\t\tvar src = $item.attr('src');\n\t\t\t\t\tif (src && this.shopify_img_re.test(src)) {\n\t\t\t\t\t\textract.push(src.replace(this.shopify_img_re, '$1$3'));\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar attr = props.extract_attr[j];\n\t\t\t\textract.push($item[props.extract_fn](attr));\n\t\t\t}\n\t\t}\n\t// Extract DOM\n\t} else if (props.extract_fn === 'self') {\n\t\textract = $item;\n\t// Extract with jQuery function\n\t} else {\n\t\textract = $item[props.extract_fn]();\n\t}\n\n\t//TODO: should be extract_fn typeof function\n\tif (props.hasOwnProperty('parse')) {\n\t\tif (typeof props.parse === 'function') {\n\t\t\textract = props.parse(extract);  //execute custom extract parsing function\n\t\t} else {\n\t\t\tif (window.hasOwnProperty(props.parse)) {\n\t\t\t\textract = window[props.parse](extract);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (props.bind_fn === 'css'\n\t\t&& props.hasOwnProperty('bind_property')\n\t\t&& props.bind_property === 'background-image') {\n\t\textract  = 'url(' + extract + ')';\n\t} else if (typeof props.bind_fn === 'function') {\n\t\tprops.bind_fn(extract, $dest, props, descriptor, num); //execute custom bind function\n\t\treturn;\n\t}\n\n\t//do some auto binding\n\tswitch (props.anchor_element) {\n\t\tcase 'item':\n\t\t\t$target = $dest.find(props.anchor);\n\t\t\tif ($dest.is(props.anchor) && $target.length === 0) {\n\t\t\t\t$target = $dest;\n\t\t\t}\n\n\t\t\tif (props.bind_fn === 'css' && props.hasOwnProperty('bind_property')) {\n\t\t\t\t$target[props.bind_fn](props.bind_property, extract);\n\t\t\t} else {\n\t\t\t\t$target[props.bind_fn](extract);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'template':\n\t\t\t$target = $dest.find(props.anchor);\n\t\t\tif ($dest.is(props.anchor) && $target.length === 0) {\n\t\t\t\t$target = $dest;\n\t\t\t}\n\n\t\t\tif (props.bind_fn === 'css' && props.hasOwnProperty('bind_property')) {\n\t\t\t\t$target[props.bind_fn](props.bind_property, extract);\n\t\t\t} else {\n\t\t\t\t$target[props.bind_fn](extract);\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$target = $(descriptor.anchor).find(props.anchor);\n\t\t\tif ($(descriptor.anchor).is(props.anchor) && $target.length === 0) {\n\t\t\t\t$target = $(descriptor.anchor);\n\t\t\t}\n\n\t\t\tif (props.bind_fn === 'css' && props.hasOwnProperty('bind_property')) {\n\t\t\t\t$target[props.bind_fn](props.bind_property, extract);\n\t\t\t} else {\n\t\t\t\t$target[props.bind_fn](extract);\n\t\t\t}\n\t}\n}\n\nShortcodes.prototype.construct = function(shortcode_obj) {\n\tlet $template = null;\n\n\tif (shortcode_obj.descriptor.hasOwnProperty('template')) {\n\t\t$template = $(this.getTemplate(shortcode_obj.descriptor.template));\n\t}\n\t\n\tconst sorted = this.sortDOM(shortcode_obj);\n\n\tif (shortcode_obj.descriptor.hasOwnProperty('item_template')) {\n\t\tfor (var i = 0; i < sorted.elements[sorted.max_element_key].length; i++) {\n\t\t\tvar $item_template = $(this.getTemplate(shortcode_obj.descriptor.item_template));\n\t\t\tif (sorted.item_tags[i]) {\n\t\t\t\t$item_template.addClass(sorted.item_tags[i]);\n\t\t\t}\n\n\t\t\tfor (var k in shortcode_obj.descriptor.elements) {\n\t\t\t\tvar props = shortcode_obj.descriptor.elements[k];\n\t\t\t\tif (sorted.elements[k][i]) { //if the element exists, may be an uneven number\n\t\t\t\t\tvar $item = $(sorted.elements[k][i]);\n\t\t\t\t\tthis.executeProperties($item, $item_template, props, shortcode_obj.descriptor, i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar $dest = shortcode_obj.descriptor.hasOwnProperty('template') ? $template.find(shortcode_obj.descriptor.item_anchor) : $(descriptor.anchor);\n\t\t\tif (typeof shortcode_obj.descriptor.bind_fn === 'function') {\n\t\t\t\tshortcode_obj.descriptor.bind_fn($item_template, $dest, shortcode_obj.descriptor, shortcode_obj, i);\n\t\t\t} else {\n\t\t\t\t$dest[shortcode_obj.descriptor.bind_fn]($item_template);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (shortcode_obj.descriptor.hasOwnProperty('elements')) {\n\t\t\tfor (var k in shortcode_obj.descriptor.elements) {\n\t\t\t\tvar props = shortcode_obj.descriptor.elements[k];\n\n\t\t\t\tif (sorted.elements.hasOwnProperty(k)) {\n\t\t\t\t\tfor (var i = 0; i < sorted.elements[k].length; i++) {\n\t\t\t\t\t\tvar $item = $(sorted.elements[k][i]);\n\t\t\t\t\t\tvar $dest = shortcode_obj.descriptor.hasOwnProperty('template') ? $template : $(shortcode_obj.descriptor.anchor);\n\t\t\t\t\t\tthis.executeProperties($item, $dest, props, shortcode_obj.descriptor, i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar $dest = shortcode_obj.descriptor.hasOwnProperty('template') ? $template : $(shortcode_obj.descriptor.anchor);\n\t\t\tif (typeof shortcode_obj.descriptor.bind_fn === 'function') {\n\t\t\t\tshortcode_obj.descriptor.bind_fn(sorted.elements.rest, $dest, shortcode_obj.descriptor, shortcode_obj);\n\t\t\t} else {\n\t\t\t\tif (propertyIsFunction($dest, shortcode_obj.descriptor.bind_fn))\n\t\t\t\t\t$dest[shortcode_obj.descriptor.bind_fn](sorted.elements.rest)\n\t\t\t}\n\t\t}\n\t}\n\n\tif (shortcode_obj.descriptor.hasOwnProperty('template')) {\n\t\tif (typeof shortcode_obj.descriptor.bind_fn === 'function') {\n\t\t\tshortcode_obj.descriptor.bind_fn($template, $(document.querySelector(shortcode_obj.descriptor.anchor)), shortcode_obj.descriptor, shortcode_obj);\n\t\t} else {\n\t\t\t$(shortcode_obj.descriptor.anchor)[shortcode_obj.descriptor.bind_fn]($template);\n\t\t}\n\t\treturn $template[0];\n\t}\n\n\treturn document.querySelector(shortcode_obj.descriptor.anchor);\n};\n\nShortcodes.prototype.getTemplate = function(selector) {\n\tselector = [selector]\n\tif (this.options.template_class) {\n\t\tselector.push(`.${this.options.template_class}`)\n\t}\n\tconst template = document.querySelector(selector.join('')).cloneNode(true)\n\ttemplate.classList.remove(this.options.template_class)\n\ttemplate.removeAttribute('hidden')\n\ttemplate.removeAttribute('aria-hidden')\n\n\treturn template\n}\n\nShortcodes.prototype.register = function(shortcode_name, descriptor) {\n\tthis.descriptor_index[shortcode_name] = descriptor\n\tconst self = this\n\n\tthis.exec_fns[shortcode_name] = function(shortcode_obj) {\n\t\tshortcode_obj.executeAttributes()\n\n\t\t// execute preprocessing function\n\t\tif (propertyIsFunction(shortcode_obj.descriptor, 'pre')) {\n\t\t\tshortcode_obj.descriptor.pre(shortcode_obj)\n\t\t}\n\n\t\tconst template = self.construct(shortcode_obj)\n\n\t\tif (template) {\n\t\t\tif (shortcode_obj.classes.length) template.classList.add(shortcode_obj.classes.join(' '))\n\t\t\tcss(template, shortcode_obj.css);\n\t\t\ttemplate.classList.add('shortcode-js')\n\t\t}\n\t\t\n\t\t//TODO: per item callback\n\t\tif (propertyIsFunction(shortcode_obj.descriptor, 'callback')) {\n\t\t\tshortcode_obj.descriptor.callback($(template), shortcode_obj)\n\t\t}\n\t}\n}\n\nShortcodes.prototype.execute = function(elem, callback) {\n\telem.style.visibility = 'hidden'\n\tconst shortcode_map = this.iterateNode(elem, this.descriptor_index, this.options.self_anchor_class)\n\n\tfor (const key in shortcode_map) {\n\t\tconst fn_name = shortcode_map[key].name\n\t\tif (this.exec_fns.hasOwnProperty(fn_name)) {\n\t\t\tthis.exec_fns[fn_name](shortcode_map[key])\n\t\t}\n\t}\n\n\telem.style.visibility = 'visible'\n\tif (callback) callback(shortcode_map, this.exec_fns)\n}\n\nShortcodes.prototype.clear = function() {\n\tremoveAll('.shortcode-js')\n\tremoveAll('.self-anchor')\n}\n\nShortcodes.prototype.reinitialize = function($elem, callback) {\n\tthis.clear()\n\tthis.execute($elem, callback)\n}\n\nclass Shortcode {\n\tconstructor(tag_content, descriptor, counter, opts) {\n\t\tconst name = getShortcodeName(tag_content)\n\t\tconst attributes = parseAttributes(tag_content)\n\t\tdelete attributes[name]\n\n\t\tthis.tag_content = tag_content\n\t\tthis.uid = `${name}-sc-${counter}`\n\t\tthis.name = name\n\t\tthis.attributes = attributes\n\t\tthis.descriptor = clone(descriptor)\n\t\tthis.content = []\n\t\tthis.counter = counter\n\t\tthis.classes = []\n\t\tthis.css = {}\n\t\tthis.options = {\n\t\t\tplacement_class_prefix: 'shortcode-landing',\n\t\t}\n\n\t\tif (opts) {\n\t\t\tshallowMerge(this.options, opts)\n\t\t}\n\t}\n\n\texecuteAttributes() {\n\t\tvar self = this\n\t\tconst fns = {}\n\n\t\tfns['header-class'] = function(shortcode_obj, value) {\n\t\t\tlet header = null;\n\n\t\t\tif (shortcode_obj.descriptor.hasOwnProperty('header_selector') && shortcode_obj.descriptor.header_selector) {\n\t\t\t\theader = document.querySelector(shortcode_obj.descriptor.header_selector);\n\t\t\t}\n\n\t\t\tif (!header) header = document.querySelector('header')\n\t\t\tif (!header) header = document.querySelector('body')\n\n\t\t\theader.classList.add(value)\n\t\t}\n\n\t\tfns['body-class'] = function(shortcode_obj, value) {\n\t\t\tdocument.querySelector('body').classList.add(value)\n\t\t}\n\n\t\tfns['placement'] = function(shortcode_obj, value) {\n\t\t\tif (value === 'content') {\n\t\t\t\tshortcode_obj.descriptor.anchor = 'self'\n\t\t\t\treturn\n\t\t\t}\n\t\t\tshortcode_obj.descriptor.anchor= '.' + self.options.placement_class_prefix + '-' + value;\n\t\t}\n\n\t\tfns['background-color'] = function(shortcode_obj, value) {\n\t\t\tshortcode_obj.css['backgroundColor'] = value\n\t\t}\n\n\t\tfns['background-image'] = function(shortcode_obj, value) {\n\t\t\tshortcode_obj.css['backgroundImage'] = `url(${value})`\n\t\t}\n\n\t\tfns['color'] = function(shortcode_obj, attr) {\n\t\t\tshortcode_obj.css['color'] = attr\n\t\t}\n\n\t\t//Descriptor can carry custom attribute parsers. They can override the default ones\n\t\tif (this.descriptor.hasOwnProperty('attribute_parsers')) {\n\t\t\tfor (var k in this.descriptor.attribute_parsers) {\n\t\t\t\tif (propertyIsFunction(this.descriptor.attribute_parsers, k)) {\n\t\t\t\t\tfns[k] = this.descriptor.attribute_parsers[k]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const key in this.attributes) {\n\t\t\tconst value = this.attributes[key]\n\n\t\t\tif (fns.hasOwnProperty(key) && value) {\n\t\t\t\tfns[key](this, value)\n\t\t\t} else {\n\t\t\t\tthis.classes.push(key)\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n}\n"],
  "mappings": "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",
  "names": ["res", "res", "descriptor"]
}
