{
  "version": 3,
  "sources": ["src/spellbook/helpers.ts", "src/lib/parsers.js", "src/shortcodes.js"],
  "sourcesContent": ["/**\n * Shallow merges two objects together. Used to pass simple options to functions.\n * \n * @param {object} target The target object to merge into\n * @param {object} source The source object to merge from\n * @example\n * const target = { foo: 'bar' }\n * const source = { bar: 'baz' }\n * shallowMerge(target, source) // { foo: 'bar', bar: 'baz' }\n */\nfunction shallowMerge(target: any, source: any) {\n  for (const key in source) {\n    target[key] = source[key]\n  }\n}\n\nfunction _cloneObject(o: object) {\n  let res = {}\n  for (const i in o) {\n    res[i] = clone(o[i])\n  }\n  return res\n}\n\nfunction _cloneArray(a: Array<any>) {\n  let res: Array<any> = []\n  for(var i = 0; i < a.length; i++) {\n    res[i] = clone(a[i])\n  }\n  return res\n}\n\n/**\n * Deep clone function that's mindful of arrays and objects\n * \n * @param {object} o The object to clone\n * @example\n * const obj = { foo: 'bar' }\n * const clone = clone(obj)\n * clone.foo = 'baz'\n * console.log(obj.foo) // 'bar'\n * console.log(clone.foo) // 'baz'\n * @todo Check if faster than assign. This function is pretty old...\n */ \nfunction clone(o: any) {\n  let res: any = null\n  if(Array.isArray(o)) {\n    res = _cloneArray(o)\n  } else if(typeof o === 'object' && o !== null) {\n    res = _cloneObject(o)\n  } else {\n    res = o;\n  }\n  return res;\n}\n\n/**\n * Detaches an element from the DOM and returns it\n * \n * @param {HTMLElement} element The element to detach\n */\nfunction detachElement(element: HTMLElement) {\n  if (element && element.parentNode) {\n    element.parentNode.removeChild(element);\n  }\n  return element\n}\n\n/**\n * Inserts an element before another element\n * \n * @param {HTMLElement} targetElement The element to insert before\n * @param {HTMLElement} newElement The element to insert\n * @example\n * const target = document.getElementById('target')\n * const newElement = document.createElement('div')\n * newElement.id = 'newElement'\n * insertBeforeElement(target, newElement)\n * // <div id=\"newElement\"></div>\n * // <div id=\"target\"></div>\n */\nfunction insertBeforeElement(targetElement: HTMLElement, newElement: HTMLElement) {\n  targetElement.parentNode?.insertBefore(newElement, targetElement);\n}\n\n/**\n * Removes all elements matching a selector from the DOM\n * \n * @param {string} selector The selector to select elements to remove\n */\nfunction removeAll(selector: string) {\n  for (const element of document.querySelectorAll(selector)) {\n    element.remove();\n  }\n}\n\nexport { clone, shallowMerge, detachElement, insertBeforeElement, removeAll }\n", "/**\n * Parse a string of attributes and return an object\n * \n * @param {string} string - The string to parse\n * @returns {object} - The parsed attributes \n * @example\n * parseAttributes('button text=\"Click me\" data='{\"key\": \\\"value\"}' class=\"btn btn-primary\"')\n * // => { button: null, text: 'Click me', data: '{\"key\": \"value\"}', class: 'btn btn-primary' }\n */\nexport function parseAttributes(str) {\n\tconst re = /\\s*(?:([a-z_]{1}[a-z0-9\\-_]*)=?(?:\"([^\"]+)\"|'([^']+)')*)\\s*/gi\n\tconst reWithoutValue = /^\\s*([a-z_]{1}[a-z0-9\\-_]*)\\s*$/i\n\tconst reHasValue = /^\\s*([a-z_]{1}[a-z0-9\\-_]*)=(\"[^\"]+\"|'[^']+')\\s*$/i\n\tconst reReplaceFirstAndLastQuote = /^[\"']|[\"']$/g\n\t\n\tconst res = {}\n\tconst match = str.match(re)\n\n\tfor (let i = 0; i < match.length; i++) {\n\t\tconst m = match[i]\n\t\tif (m === '') continue\n\n\t\tif (reWithoutValue.test(m)) {\n\t\t\tconst [, key] = m.match(reWithoutValue)\n\t\t\tres[key] = null\n\t\t\treWithoutValue.lastIndex = 0\n\t\t} else if (reHasValue.test(m)) {\n\t\t\tconst [, key, value] = m.match(reHasValue)\n\t\t\tres[key] = value.replace(reReplaceFirstAndLastQuote, '')\n\t\t\treReplaceFirstAndLastQuote.lastIndex = 0\n\t\t\treHasValue.lastIndex = 0\n\t\t}\n\t}\n\n\treturn res\n}\n\n/**\n * Get the shortcode content from a string if shortcode is present\n * \n * @param {string} string - The string to parse\n * @returns {string} - The shortcode content\n * @example\n * getShortcodeContent('[shortcode foo=\"bar\"]')\n * // => 'shortcode foo=\"bar\"'\n */\nexport function getShortcodeContent(str) {\n\tconst re = /\\[([^\\[\\]]+)\\]/i\n\tconst match = str.match(re)\n\treturn match ? match[1] : null\n}\n\n/**\n * Check if it is a specific closing tag from provided shortcode content (meaning without the brackets)\n * \n * @param {string} string - The string to parse, shortcode content without the brackets\n * @param {string} tag - The shortcode tag to check\n * @returns {boolean} - True if it is a specific closing tag, false otherwise\n * @example\n * const shortcodeTagContent = getShortcodeContent('[/  shortcode ]')\n * isSpecificClosingTag(shortcodeTagContent, 'shortcode')\n * // => true\n */\nexport function isSpecificClosingTag(str, tag) {\n\tconst re = new RegExp(`^\\\\/\\\\s*${tag}\\\\s*$`, 'i')\n\treturn re.test(str)\n}\n\n/**\n * Get the shortcode name from shortcode content\n * \n * @param {string} string - The string to parse, shortcode content without the brackets\n * @returns {string} - The shortcode name\n * @example\n * const testShortcodeTagContent = getShortcodeContent('[shortcode foo=\"bar\"]')\n * getShortcodeName(testShortcodeTagContent)\n * // => 'shortcode'\n */\nexport function getShortcodeName(str) {\n\tconst re = /^\\s*([a-z_]{1}[a-z0-9\\-_]*)\\s*/i\n\tconst match = str.match(re)\n\treturn match ? match[1] : null\n}\n", "import { clone, shallowMerge, removeAll, insertBeforeElement } from './spellbook/helpers';\nimport { parseAttributes, getShortcodeContent, isSpecificClosingTag, getShortcodeName } from './lib/parsers';\n\n//TODO: THIS SHIT NEEDS A HEAVY REWRITE!!! YOU LAZY ASS!\n\n//TODO: decide if jQuery is really necessary\n\nclass Shortcodes {\n\tconstructor(options) {\n\t\tthis.descriptor_index = {};\n\t\tthis.exec_fns = {};\n\t\n\t\tthis.shopify_img_re = /^([a-z\\.:\\/]+\\.shopify\\.[a-z0-9\\/_\\-]+)(_[0-9]+x[0-9]*)(\\.[a-z]{3,4}.*)$/gi\n\t\tthis.shopify_img_replacer_re = /^([a-z\\.:\\/]+\\.shopify\\.[a-z0-9\\/_\\-]+)(\\.[a-z]{3,4}.*)$/gi\n\n\t\tthis.shortcode_re = /\\[([^\\[\\]]+)\\]/gi \n\t\t\n\t\tthis.options = {\n\t\t\ttemplates: '#templates',\n\t\t\ttemplate_class: 'template',\n\t\t\tself_anchor_class: 'self-anchor',\n\t\t\tplacement_class_prefix: 'shortcode-landing'\n\t\t}\n\t\n\t\tif (options) {\n\t\t\tshallowMerge(this.options, options)\n\t\t}\n\t}\n\n\t/**\n\t * Shopify image link image size changer\n\t * \n\t * @param {string} src \n\t * @param {number} width \n\t * @returns string\n\t */\n\tshopifyImageLink(src, width) {\n\t\tconst pref = '$1'\n\t\tlet suf = '$2'\n\t\tif (!width) width = 100\n\t\tlet re = this.shopify_img_replacer_re\n\n\t\tif (!re.test(src)) return src\n\n\t\tif (this.shopify_img_re.test(src)) {\n\t\t\tsuf = '$3'\n\t\t\tre = this.shopify_img_re\n\t\t}\n\n\t\tconst replacement = `${pref}_${width}x${suf}`\n\t\treturn src.replace(re, replacement)\n\t}\n\n\t/**\n\t * Creates a self anchor element used for inserting shortcode in the DOM tree where it was found\n\t * \n\t * @param {HTMLElement} elem - Element to insert the anchor before\n\t * @param {string} custom_anchor_class - Custom class to add to the anchor if provided\n\t * @param {string} shortcode_name - Name of the shortcode, adds the shortcode-{shortcode_name} class to the anchor if provided\n\t * @param {number} counter - Counter of the shortcode, adds the sc{counter} class to the anchor if provided\n\t */\n\tcreateSelfAnchor(elem, custom_anchor_class, shortcode_name, counter) {\n\t\tconst self_anchor = document.createElement('div')\n\t\tconst classes = []\n\t\tif (custom_anchor_class) classes.push(custom_anchor_class)\n\t\tif (shortcode_name) classes.push(`shortcode-${shortcode_name}`)\n\t\tif (counter) classes.push(`sc${counter}`)\n\t\tself_anchor.className = classes.join(' ')\n\t\tinsertBeforeElement(elem, self_anchor)\n\n\t\treturn self_anchor\n\t}\n\n\t/**\n\t * Finds elements between the shortcodes makes a map of all shortcodes and their containing elements\n\t * \n\t * @param {HTMLElement} elem - Entry element to parse and find shortcodes in\n\t * @param {object} register - Object containing all registered shortcodes, used to check if the shortcode is registered\n\t * @param {string} self_anchor_class - Class to add to the self anchor element\n\t */\n\titerateNode(elem, register, self_anchor_class) {\n\t\tconst map = {}\n\t\tconst children = elem.children\n\t\tlet map_key = null\n\t\tlet last_shortcode = null\n\t\tlet shortcode_counter = 0\n\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst child = children[i]\n\t\t\tlet match = null\n\t\t\t\n\t\t\t// check all elements for shortcodes except \"pre\" elements\n\t\t\tif (!(child instanceof HTMLPreElement || child.querySelector('pre'))) { //only if it's not \"pre\" element\n\t\t\t\tconst text = child.textContent.toLowerCase().trim()\n\t\t\t\tmatch = getShortcodeContent(text)\n\n\t\t\t\t// if the shortcode is not registered, treat it as a regular text\n\t\t\t\tif (match && !register.hasOwnProperty(getShortcodeName(match))) {\n\t\t\t\t\tmatch = null\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// when the shortcode is detected\n\t\t\tif (match) {\n\t\t\t\t// detect closing tag and remove it\n\t\t\t\tif (last_shortcode && isSpecificClosingTag(match, last_shortcode.name)) {\n\t\t\t\t\tmap_key = null\n\t\t\t\t\tlast_shortcode = null\n\t\t\t\t\tchild.remove()\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t\tlast_shortcode = {\n\t\t\t\t\tcontent: match,\n\t\t\t\t\tname: getShortcodeName(match),\n\t\t\t\t\tattributes: parseAttributes(match),\n\t\t\t\t\tcounter: shortcode_counter,\n\t\t\t\t\telements: []\n\t\t\t\t}\n\t\t\t\tdelete last_shortcode.attributes[last_shortcode.name]\n\n\t\t\t\tmap_key = `${last_shortcode.name} sc${shortcode_counter}`\n\t\t\t\tconst self_anchor = this.createSelfAnchor(child, self_anchor_class, last_shortcode.name, shortcode_counter)\n\n\t\t\t\tif (!map.hasOwnProperty(map_key)) {\n\t\t\t\t\tmap[map_key] = last_shortcode\n\t\t\t\t\tshortcode_counter++\n\t\t\t\t}\n\n\t\t\t\tmap[map_key].elements.push(self_anchor)\n\t\t\t\tchild.remove()\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tif (map_key) {\n\t\t\t\tmap[map_key].elements.push(child)\n\t\t\t}\n\t\t}\n\n\t\treturn map\n\t}\n}\n\n//if this isn't a God function I don't know what is... Wait, I know, it's a terrible nonrefactored code!\nShortcodes.prototype.sortDOM = function(descriptor, val) {\n\tvar re = /^\\{([a-z0-9\\-_\\s]+)\\}$/gi; //subtag attributes\n\n\tvar item_tags = []; //collects attributes per \"slide\"\n\tvar elements = {}; //sorted DOM per tag name\n\tvar other_than_rest = {};\n\tvar other_than_rest_count = 0;\n\tvar first_element_key = null;\n\tvar last_element_key = null;\n\tvar max_element_key = null;\n\n\tvar cycle_counter = 0;\n\tvar subtag_first_flag = false;\n\n\t//cycles are used for backaging the rest of elements in arrays\n\tfunction newCycle() {\n\t\tfillTheGaps();\n\t\tcycle_counter += 1;\n\t}\n\n\t//rest has to be always present, it is a default collection of all undefined elements\n\telements.rest = [];\n\n\tvar memo_block_template = {}; //this will hold all the tag names from elements and remove the ones found, so we can generate empty states for the not found ones\n\tvar memo_block = {};\n\n\tfunction fillTheGaps() {\n\t\tfor (var k in memo_block) {\n\t\t\telements[k].push(null);\n\t\t}\n\t\tmemo_block = newMemoBlock();\n\t}\n\n\t//clone temp memo_block\n\tfunction newMemoBlock() {\n\t\tres = {};\n\t\tfor (var k in memo_block_template) {\n\t\t\tres[k] = true;\n\t\t}\n\t\treturn res;\n\t}\n\n\t//extract other than rest\n\tif (descriptor.hasOwnProperty('elements')) {\n\t\tfor (var k in descriptor.elements) {\n\t\t\tif (k !== 'rest') {\n\t\t\t\tlast_element_key = k;\n\t\t\t\tif (!elements.hasOwnProperty(k)) {\n\t\t\t\t\telements[k] = [];\n\t\t\t\t}\n\n\t\t\t\tif (first_element_key === null) {\n\t\t\t\t\tfirst_element_key = k;\n\t\t\t\t}\n\n\t\t\t\tif (!other_than_rest.hasOwnProperty(k)) {\n\t\t\t\t\tother_than_rest[k] = true;\n\t\t\t\t\tother_than_rest_count++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmemo_block_template[k] = true;\n\t\t\tmemo_block[k] = true;\n\t\t}\n\t}\n\n\tfor (var i = 0; i < val.length; i++) {\n\t\tvar $item = $(val[i]);\n\n\t\t//XXX: ??? did we stop using this? this might be a part of legacy code\n\t\tif ($item.hasClass(this.options.self_anchor_class)) {\n\t\t\t// find yourself in this confusion\n\t\t\tif (descriptor.anchor === 'self') {\n\t\t\t\tdescriptor.anchor = $item;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t//if the contents are empty\n\t\tif (!$item.is('img') && $item.html().trim() === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar green_flag = false;\n\n\t\t//testing for slide attributes\n\t\tif (descriptor.hasOwnProperty('item_template')) {\n\t\t\tvar text = $item.text().toLowerCase().trim();\n\t\t\tvar match = re.exec(text);\n\t\t\tre.lastIndex = 0;\n\n\t\t\tif (match && match.length > 1) {\n\t\t\t\tif (cycle_counter || subtag_first_flag) {\n\t\t\t\t\tnewCycle();\n\t\t\t\t}\n\n\t\t\t\titem_tags[cycle_counter] = match[1];\n\t\t\t\tsubtag_first_flag = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t//iterating found elements, sort defined\n\t\tif (other_than_rest_count) {\n\t\t\tfor (var k in other_than_rest) {\n\n\t\t\t\tif (elements[k].length === descriptor.elements[k].count) { //if the count of elements reatches set count skip iteration\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t//XXX: this is a temporary and very bad solution | this was written to be able to use images inside the ul/li as secondary images\n\t\t\t\tif (k === 'img' && $item.find('li').length) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar $inner = $item.find(k); //gotta cover all the possible cases of undefined generated html\n\n\t\t\t\tif ($item.is(k) || $inner.length) { //if element is found\n\t\t\t\t\tif ($inner.length) {\n\t\t\t\t\t\t$item = $inner.first();\n\t\t\t\t\t}\n\n\t\t\t\t\t// if an element is found that belongs to a memo block but it's already processed - this means a new cycle must begin\n\t\t\t\t\tif (descriptor.hasOwnProperty('item_template') && !memo_block.hasOwnProperty(k)) {\n\t\t\t\t\t\tnewCycle();\n\t\t\t\t\t}\n\n\t\t\t\t\telements[k].push($item);\n\n\t\t\t\t\tif (descriptor.hasOwnProperty('item_template')) {\n\t\t\t\t\t\tdelete memo_block[k];\n\t\t\t\t\t}\n\t\t\t\t\tgreen_flag = true; // don't iterate the rest\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//iterating found elements, sort undefined = rest\n\t\tif (!green_flag) {\n\t\t\t//collecting other elements\n\t\t\tif (descriptor.hasOwnProperty('item_template')) { //if it is a repeater\n\t\t\t\tif (!elements.rest[cycle_counter]) {\n\t\t\t\t\tdelete memo_block['rest'];\n\t\t\t\t\telements.rest[cycle_counter] = [];\n\t\t\t\t}\n\t\t\t\telements.rest[cycle_counter].push($item[0]);\n\t\t\t} else {\n\t\t\t\telements.rest.push($item[0]);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (descriptor.hasOwnProperty('item_template')) {\n\t\tfillTheGaps();\n\t}\n\n\n\t// calculate which element has the most entries = number of slides\n\t// this will be used as a slide delimiter later on\n\tvar max_count = null;\n\n\tfor (var k in other_than_rest) {\n\t\tvar c = elements[k].length;\n\n\t\tif (max_element_key === null) {\n\t\t\tmax_element_key = k;\n\t\t\tmax_count = c;\n\t\t} else {\n\t\t\tif (c > max_count) {\n\t\t\t\tmax_element_key = k;\n\t\t\t\tmax_count = c;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\telements: elements,\n\t\t\t\titem_tags: item_tags,\n\t\t\t\tfirst_element_key: first_element_key,\n\t\t\t\tlast_element_key: last_element_key,\n\t\t\t\tmax_element_key: max_element_key\n\t};\n}\n\n//TODO: simplify with declarative programming\nShortcodes.prototype.executeProperties = function($item, $dest, props, descriptor, num) {\n\t//$item = $($item);\n\t// Extract DOM attributes\n\tif (props.extract_fn === 'attr') {\n\t\tif (typeof props.extract_attr === 'string') {\n\t\t\textract = $item[props.extract_fn](props.extract_attr);\n\n\t\t\tif ($item.is('img') && props.extract_attr === 'src') {\n\t\t\t\tif (extract && this.shopify_img_re.test(extract)) {\n\t\t\t\t\textract = extract.replace(this.shopify_img_re, '$1$3');\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // if it has multiple attributes to extract, like alt image -> for binding use custom function\n\t\t\textract = [];\n\t\t\tfor (var j = 0; j < props.extract_attr.length; j++) {\n\t\t\t\tif (props.extract_attr[j] === 'html') {\n\t\t\t\t\textract.push($item.html());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif ($item.is('img') && props.extract_attr[j] === 'src') {\n\t\t\t\t\tvar src = $item.attr('src');\n\t\t\t\t\tif (src && this.shopify_img_re.test(src)) {\n\t\t\t\t\t\textract.push(src.replace(this.shopify_img_re, '$1$3'));\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar attr = props.extract_attr[j];\n\t\t\t\textract.push($item[props.extract_fn](attr));\n\t\t\t}\n\t\t}\n\t// Extract DOM\n\t} else if (props.extract_fn === 'self') {\n\t\textract = $item;\n\t// Extract with jQuery function\n\t} else {\n\t\textract = $item[props.extract_fn]();\n\t}\n\n\t//TODO: should be extract_fn typeof function\n\tif (props.hasOwnProperty('parse')) {\n\t\tif (typeof props.parse === 'function') {\n\t\t\textract = props.parse(extract);  //execute custom extract parsing function\n\t\t} else {\n\t\t\tif (window.hasOwnProperty(props.parse)) {\n\t\t\t\textract = window[props.parse](extract);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (props.bind_fn === 'css'\n\t\t&& props.hasOwnProperty('bind_property')\n\t\t&& props.bind_property === 'background-image') {\n\t\textract  = 'url(' + extract + ')';\n\t} else if (typeof props.bind_fn === 'function') {\n\t\tprops.bind_fn(extract, $dest, props, descriptor, num); //execute custom bind function\n\t\treturn;\n\t}\n\n\t//do some auto binding\n\tswitch (props.anchor_element) {\n\t\tcase 'item':\n\t\t\t$target = $dest.find(props.anchor);\n\t\t\tif ($dest.is(props.anchor) && $target.length === 0) {\n\t\t\t\t$target = $dest;\n\t\t\t}\n\n\t\t\tif (props.bind_fn === 'css' && props.hasOwnProperty('bind_property')) {\n\t\t\t\t$target[props.bind_fn](props.bind_property, extract);\n\t\t\t} else {\n\t\t\t\t$target[props.bind_fn](extract);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'template':\n\t\t\t$target = $dest.find(props.anchor);\n\t\t\tif ($dest.is(props.anchor) && $target.length === 0) {\n\t\t\t\t$target = $dest;\n\t\t\t}\n\n\t\t\tif (props.bind_fn === 'css' && props.hasOwnProperty('bind_property')) {\n\t\t\t\t$target[props.bind_fn](props.bind_property, extract);\n\t\t\t} else {\n\t\t\t\t$target[props.bind_fn](extract);\n\t\t\t}\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t$target = $(descriptor.anchor).find(props.anchor);\n\t\t\tif ($(descriptor.anchor).is(props.anchor) && $target.length === 0) {\n\t\t\t\t$target = $(descriptor.anchor);\n\t\t\t}\n\n\t\t\tif (props.bind_fn === 'css' && props.hasOwnProperty('bind_property')) {\n\t\t\t\t$target[props.bind_fn](props.bind_property, extract);\n\t\t\t} else {\n\t\t\t\t$target[props.bind_fn](extract);\n\t\t\t}\n\t}\n}\n\nShortcodes.prototype.bind = function(descriptor, val, parsed_attrs) {\n\tvar $template = null;\n\n\tif (descriptor.hasOwnProperty('template')) {\n\t\t$template = this.getTemplate(descriptor.template);\n\t}\n\n\tvar sorted = this.sortDOM(descriptor, val);\n\n\tif (descriptor.hasOwnProperty('item_template')) {\n\t\tfor (var i = 0; i < sorted.elements[sorted.max_element_key].length; i++) {\n\t\t\tvar $item_template = this.getTemplate(descriptor.item_template);\n\t\t\tif (sorted.item_tags[i]) {\n\t\t\t\t$item_template.addClass(sorted.item_tags[i]);\n\t\t\t}\n\n\t\t\tfor (var k in descriptor.elements) {\n\t\t\t\tvar props = descriptor.elements[k];\n\t\t\t\tif (sorted.elements[k][i]) { //if the element exists, may be an uneven number\n\t\t\t\t\tvar $item = $(sorted.elements[k][i]);\n\t\t\t\t\tthis.executeProperties($item, $item_template, props, descriptor, i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar $dest = descriptor.hasOwnProperty('template') ? $template.find(descriptor.item_anchor) : $(descriptor.anchor);\n\t\t\tif (typeof descriptor.bind_fn === 'function') {\n\t\t\t\tdescriptor.bind_fn($item_template, $dest, descriptor, parsed_attrs, i);\n\t\t\t} else {\n\t\t\t\t$dest[descriptor.bind_fn]($item_template);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (descriptor.hasOwnProperty('elements')) {\n\t\t\tfor (var k in descriptor.elements) {\n\t\t\t\tvar props = descriptor.elements[k];\n\n\t\t\t\tif (sorted.elements.hasOwnProperty(k)) {\n\t\t\t\t\tfor (var i = 0; i < sorted.elements[k].length; i++) {\n\t\t\t\t\t\tvar $item = $(sorted.elements[k][i]);\n\t\t\t\t\t\tvar $dest = descriptor.hasOwnProperty('template') ? $template : $(descriptor.anchor);\n\t\t\t\t\t\tthis.executeProperties($item, $dest, props, descriptor, i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar $dest = descriptor.hasOwnProperty('template') ? $template : $(descriptor.anchor);\n\t\t\tif (typeof descriptor.bind_fn === 'function') {\n\t\t\t\tdescriptor.bind_fn(sorted.elements.rest, $dest, descriptor, parsed_attrs);\n\t\t\t} else {\n\t\t\t\t$dest[descriptor.bind_fn](sorted.elements.rest);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (descriptor.hasOwnProperty('template')) {\n\t\tif (typeof descriptor.bind_fn === 'function') {\n\t\t\tdescriptor.bind_fn($template, $(descriptor.anchor), descriptor, parsed_attrs);\n\t\t} else {\n\t\t\t$(descriptor.anchor)[descriptor.bind_fn]($template);\n\t\t}\n\t\treturn $template;\n\t}\n\n\treturn $(descriptor.anchor);\n};\n\nShortcodes.prototype.getTemplate = function(selector) {\n\tvar $template = $(this.options.templates).find(selector+'.'+this.options.template_class).clone();\n\t$template.removeClass(this.options.template_class);\n\treturn $template;\n}\n\nShortcodes.prototype.parseAttribute = function(attr) {\n\tvar res = {\n\t\tname: null,\n\t\tvalue: null\n\t}\n\n\tvar pts = attr.split('=');\n\n\tif (pts.length === 2) {\n\t\tres.name = pts[0].trim();\n\t\tres.value = pts[1].trim();\n\t}\n\n\treturn res;\n}\n\n//TODO: what about subtag attribute parses? Check how subtags are pared?\nShortcodes.prototype.parseAttributes = function(descriptor, attrs) {\n\tvar self = this\n\tconst res = {\n\t\tclasses: [],\n\t\tcss: {},\n\t\tattrs: {}\n\t}\n\n\tconst fns = {}\n\n\t//some default parsers\n\n\tfns['header'] = function(pts, descriptor, attr) {\n\t\tlet header = null;\n\t\tif (descriptor.hasOwnProperty('header_selector') && descriptor.header_selector) {\n\t\t\theader = document.querySelector(descriptor.header_selector);\n\t\t}\n\n\t\tif (!header) document.querySelector('header')\n\t\tif (!header) document.querySelector('body')\n\n\t\theader.classList.add(pts.join('-'))\n\t}\n\n\tfns['placement'] = function(pts, descriptor, attr) {\n\t\tif (pts[0]) {\n\t\t\tif (pts[0] === 'content') {\n\t\t\t\tdescriptor.anchor = 'self';\n\t\t\t} else {\n\t\t\t\tdescriptor.anchor = '.' + self.options.placement_class_prefix + '-' + pts[0];\n\t\t\t}\n\t\t}\n\t}\n\n\n\t//TODO: This shouldn't be so hardcode...\n\tfns['background'] = function(pts, descriptor, attr) {\n\t\tif (pts[0] && pts[0] === 'color' && pts[1]) {\n\t\t\tres.css['background-color'] = '#'+pts[1]\n\t\t} else {\n\t\t\tres.classes.push(attr);\n\t\t}\n\t}\n\n\tfns['color'] = function(pts, descriptor, attr) {\n\t\tif (pts[0]) {\n\t\t\tres.css['color'] = pts[0]\n\t\t} else {\n\t\t\tres.classes.push(attr)\n\t\t}\n\t}\n\n\t//Descriptor can carry custom attribute parsers. They can override the default ones\n\tif (descriptor.hasOwnProperty('attribute_parsers')) {\n\t\tfor (var k in descriptor.attribute_parsers) {\n\t\t\tfns[k] = descriptor.attribute_parsers[k]\n\t\t}\n\t}\n\n\tfor (var i = 0; i < attrs.length; i++) {\n\t\tvar attr = attrs[i].trim().toLowerCase()\n\n\t\t// these are shortcode identifiers, move along\n\t\tif (/sc[0-9]+/gi.test(attr)) {\n\t\t\tcontinue\n\t\t}\n\n\t\t// TODO: \n\t\tvar pts = attr.split('-');\n\t\tif (pts[0] && fns.hasOwnProperty(pts[0])) {\n\t\t\tfns[pts.shift()](pts, descriptor, attr);\n\t\t} else {\n\t\t\tres.classes.push(attr)\n\t\t}\n\t}\n\n\treturn res\n}\n\nShortcodes.prototype.register = function(shortcode_name, descriptor) {\n\tthis.descriptor_index[shortcode_name] = descriptor;\n\tvar self = this;\n\n\tthis.exec_fns[shortcode_name] = function(k, attrs, val) {\n\t\tconst descriptor = clone(self.descriptor_index[k]);\n\n\t\tconst parsed_attrs = self.parseAttributes(descriptor, attrs);\n\n\t\tconsole.log(parsed_attrs)\n\n\t\t// execute preprocessing function\n\t\tif (descriptor.hasOwnProperty('pre') \n\t\t  && descriptor.pre \n\t\t\t&& typeof descriptor.pre === 'function') {\n\t\t\t\tdescriptor.pre(descriptor, attrs, val, parsed_attrs);\n\t\t}\n\n\t\tvar $template = self.bind(descriptor, val, parsed_attrs);\n\n\t\t$template.addClass(parsed_attrs.classes.join(' '));\n\t\t$template.css(parsed_attrs.css);\n\t\t$template.addClass('shortcode-js');\n\n\t\t//TODO: per item callback\n\t\tif (descriptor.hasOwnProperty('callback') && descriptor.callback) {\n\t\t\tdescriptor.callback($template, parsed_attrs, descriptor);\n\t\t}\n\t}\n}\n\nShortcodes.prototype.execute = function(elem, callback) {\n\telem.style.visibility = 'hidden'\n\tconst shortcode_map = this.iterateNode(elem, this.descriptor_index, this.options.self_anchor_class)\n\n\tfor (let k in shortcode_map) {\n\t\tconst attrs = shortcode_map[k].attributes\n\t\tconst fn_name = shortcode_map[k].name\n\t\tconst elements = shortcode_map[k].elements\n\n\t\tif (this.exec_fns.hasOwnProperty(fn_name)) {\n\t\t\tthis.exec_fns[fn_name](fn_name, attrs, elements)\n\t\t}\n\t}\n\n\telem.style.visibility = 'visible'\n\tif (callback) callback(shortcode_map, this.exec_fns)\n}\n\nShortcodes.prototype.clear = function() {\n\tremoveAll('.shortcode-js')\n\tremoveAll('.self-anchor')\n};\n\nShortcodes.prototype.reinitialize = function($elem, callback) {\n\tthis.clear()\n\tthis.execute($elem, callback)\n};\n"],
  "mappings": "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",
  "names": ["res", "res", "k", "res", "pts", "descriptor", "attr"]
}
